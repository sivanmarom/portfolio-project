name: CI with Docker Compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Compose Up (CI)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}   # External URL עם ?sslmode=require
        run: |
          docker compose -f docker-compose.ci.yml up -d --build
          echo "Waiting for backend to be healthy..."
          for i in {1..30}; do
            if curl -sf http://localhost:5000/api/hello > /dev/null; then
              echo "Backend is up"; break
            fi
            echo "Waiting... ($i)"; sleep 3
          done

      - name: Test backend API
        run: curl --fail http://localhost:5000/api/hello

      - name: Test frontend response
        run: curl --fail http://localhost:3000

      # אם נפל — מוציאים לוגים כדי להבין למה
      - name: Logs on failure
        if: failure()
        run: |
          docker compose -f docker-compose.ci.yml ps
          docker compose -f docker-compose.ci.yml logs backend || true
          docker compose -f docker-compose.ci.yml logs frontend || true

      - name: Shutdown Docker Compose
        if: always()
        run: docker compose -f docker-compose.ci.yml down -v

  docker-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-frontend:latest

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-backend:latest

  deploy-to-render:
    runs-on: ubuntu-latest
    needs: docker-push
    steps:
      - name: Deploy Frontend to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}
      - name: Deploy Backend to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}